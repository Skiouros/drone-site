var map;var bannerSize;var markers = [];var markerCluster;var pilotMarkerCluster;var styles;var ratings;var lat, lng;var _magnificDefaults;var dragmap;var addMarkersArray = [];var pilotMarkers = [];var image = new google.maps.MarkerImage('/img/marker-featured.png', new google.maps.Size(25, 40), new google.maps.Point(0, 0), new google.maps.Point(12, 45));var $viewActive = 'drones';var $pilotRadii = {};var distances = [];var circles = [];function clearCircles() {    if (circles) {        for (i in circles) {            circles[i].setMap(null)        }    }}function deleteOverlays() {    if (addMarkersArray) {        for (i in addMarkersArray) {            addMarkersArray[i].setMap(null)        }        addMarkersArray.length = 0    }}function placeMarker(location) {    deleteOverlays();    var marker = new google.maps.Marker({        position: location,        map: dragmap,        icon: image,        draggable: true    });    addMarkersArray.push(marker);    google.maps.event.addListener(marker, 'drag', function(event) {        document.getElementById('DroneLat').value = event.latLng.lat();        document.getElementById('DroneLng').value = event.latLng.lng()    });    google.maps.event.addListener(marker, "dragend", function(event) {        document.getElementById('DroneLat').value = event.latLng.lat();        document.getElementById('DroneLng').value = event.latLng.lng()    })}function uploaderSuccess(event) {    document.getElementById("imagePath").value = event.target.response}function doIt(lat, lng, distance) {    $lat = lat;    $lng = lng;    var pilotMapOptions = {        zoom: 6,        center: new google.maps.LatLng($lat, $lng),        styles: [{            "featureType": "road",            "elementType": "geometry",            "stylers": [{                "lightness": 100            }, {                "visibility": "simplified"            }]        }, {            "featureType": "water",            "elementType": "geometry",            "stylers": [{                "visibility": "on"            }, {                "color": "#C6E2FF"            }]        }, {            "featureType": "poi",            "elementType": "geometry.fill",            "stylers": [{                "color": "#C5E3BF"            }]        }, {            "featureType": "road",            "elementType": "geometry.fill",            "stylers": [{                "color": "#D1D1B8"            }]        }]    };    pilotmap = new google.maps.Map(document.getElementById('pilotMap'), pilotMapOptions);    var marker = new google.maps.Marker({        map: pilotmap,        icon: '/img/pilot-marker.png',        position: new google.maps.LatLng($lat, $lng)    });    var $radii = distance * 1000;    var circle = new google.maps.Circle({        map: pilotmap,        radius: $radii,        fillColor: '#AA0000',        strokeWeight: 0    });    circle.bindTo('center', marker, 'position')}function getLatLong(address) {    var geocoder2 = new google.maps.Geocoder();    var result = "";    geocoder2.geocode({        'address': address    }, function(results, status) {        if (status == google.maps.GeocoderStatus.OK) {            $lat = results[0].geometry.location.lat();            $lng = results[0].geometry.location.lng();            result['lat'] = $lat;            result['lng'] = $lng;            var myLatLng = new google.maps.LatLng($lat, $lng);            placeMarker(myLatLng);            dragmap.setCenter(myLatLng);            document.getElementById('DroneLat').value = $lat;            document.getElementById('DroneLng').value = $lng        } else {            result = "Unable to find address: " + status        }    })}(function($) {    $.extend({        action: {            bindReport: function($url) {},            findFavourite: function($droneId) {                if ($.inArray($droneId.toString(), $favourite) > -1) {                    $('.addToFavourite').addClass('remove').attr('href', '/drones/remove_from_favourite/' + $droneId).html('Remove Favourite')                }                $('.addToFavourite').unbind('click').bind('click', function() {                    $url = $('.addToFavourite').attr('href');                    $.ajax({                        url: $url,                        dataType: 'json',                        success: function(data) {                            if ($('.addToFavourite').is('.remove')) {                                $('.addToFavourite').attr('href', $('.addToFavourite').attr('href').replace('remove_from', 'add_to')).html('Add to Favourites').removeClass('remove')                            } else {                                $('.addToFavourite').attr('href', $('.addToFavourite').attr('href').replace('add_to', 'remove_from')).html('Remove Favourite').addClass('remove')                            }                        }                    });                    return false                })            }        },        triggerOverlayMessage: function($message) {            if ($message == 'saved') {                $('<div class="message success sucess-message">Drone Video Posted</div>').appendTo("body").hide().fadeIn(400).delay(4000).fadeOut(400, function() {                    $(this).remove()                })            } else if ($message == 'noMatch') {                $('<div class="message error-message">Sorry address could not be found</div>').appendTo("body").hide().fadeIn(400).delay(4000).fadeOut(400, function() {                    $(this).remove()                })            } else if ($message == 'noAddress') {                $('<div class="message error-message">Please enter an address</div>').appendTo("body").hide().fadeIn(400).delay(4000).fadeOut(400, function() {                    $(this).remove()                })            }        },        initShareBlocks: function() {            var baseURLs = {                    'twitter': 'https://twitter.com/share?url=',                    'facebook': 'https://www.facebook.com/sharer/sharer.php?u=',                    'google': 'https://plus.google.com/share?url='                },                shareBlocks = $('.social-links-block').not('.ss-initialized');            if (shareBlocks.length) {                shareBlocks.each(function() {                    var _this = $(this),                        url = _this.data('share-url') || location.href;                    url = encodeURIComponent(url);                    $.each(baseURLs, function(i, v) {                        var link = _this.find('.share-' + i);                        if (link.length) {                            link.on('click', function(e) {                                e.preventDefault();                                window.open(v + url, link.attr('title'), 'width=626,height=436');                                return false                            })                        }                    });                    _this.addClass('ss-initialized')                })            }        }    });    var $window = $(window),        $doc = $(document.documentElement),        $body = $('body'),        timer = false,        placeholderSupport = true;    (function(doc) {        var addEvent = 'addEventListener',            type = 'gesturestart',            qsa = 'querySelectorAll',            scales = [1, 1],            meta = qsa in doc ? doc[qsa]('meta[name=viewport]') : [];        function fix() {            meta.content = 'width=device-width,minimum-scale=' + scales[0] + ',maximum-scale=' + scales[1];            doc.removeEventListener(type, fix, true)        }        if ((meta = meta[meta.length - 1]) && addEvent in doc) {            fix();            scales = [.25, 1.6];            doc[addEvent](type, fix, true)        }    }(document));    FormValidation = (function() {        var validateOptions = {                rules: {                    'data[Form][telephone_number]': {                        number: true                    },                    'data[Form][email_address]': {                        email: true                    },                    'data[Form][email]': {                        email: true                    }                },                messages: {                    'data[Form][telephone_number]': {                        number: "Please enter a valid number(no blank space)."                    }                },                errorPlacement: function(error, element) {                    var parent = element.parents('.form-row');                    if (parent.length) {                        error.appendTo(parent)                    } else {                        error.insertAfter(element)                    }                },                focusInvalid: placeholderSupport ? true : false            },            validationForms = {},            _addValidation = function(forms) {                forms.each(function() {                    var _this = $(this);                    _this.validate(validateOptions)                });                if (!placeholderSupport) {                    forms.find('.required[placeholder]').each(function() {                        $(this).rules('add', {                            equalPlaceholder: true                        })                    })                }            },            _init = function() {                if (!placeholderSupport) {                    $.validator.addMethod("equalPlaceholder", function(value, element) {                        return value !== $(element).attr('placeholder')                    }, "This field is required.");                    validateOptions.submitHandler = function(form) {                        $(form).find('[placeholder]').not('.required').each(function() {                            var input = $(this);                            if (input.val() == input.attr('placeholder')) {                                input.val('')                            }                        });                        form.submit()                    }                }                validationForms = $("form[class*='form-validation']");                if (validationForms.length) {                    _addValidation(validationForms)                }            };        return {            init: _init,            addValidation: _addValidation        }    })();    function rad(x) {        return x * Math.PI / 180    }    function initMap() {        styles = [{            url: '/img/cluster1.png',            height: 50,            width: 50,            anchor: [0, 0],            textColor: '#ffffff',            textSize: 12        }, {            url: '/img/cluster2.png',            height: 60,            width: 60,            textColor: '#ffffff',            textSize: 14        }, {            url: '/img/cluster3.png',            height: 80,            width: 80,            textColor: '#ffffff',            textSize: 16        }], markerClusterer = null;        $lat = $('#lat').val();        $lng = $('#lng').val();        var mapOptions = {            zoom: $window.width() > 767 ? 6 : 7,            center: new google.maps.LatLng($lat, $lng),            styles: [{                "featureType": "road",                "elementType": "geometry",                "stylers": [{                    "lightness": 100                }, {                    "visibility": "simplified"                }]            }, {                "featureType": "water",                "elementType": "geometry",                "stylers": [{                    "visibility": "on"                }, {                    "color": "#C6E2FF"                }]            }, {                "featureType": "poi",                "elementType": "geometry.fill",                "stylers": [{                    "color": "#C5E3BF"                }]            }, {                "featureType": "road",                "elementType": "geometry.fill",                "stylers": [{                    "color": "#D1D1B8"                }]            }]        };        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);        $.ajax({            url: '/drones/get_pins',            dataType: 'json',            success: function(data) {                ratings = data.ratings;                $.each(data.drones, function(key, data) {                    var dataPhoto = data.Drone;                    var latLng = new google.maps.LatLng(dataPhoto.lat, dataPhoto.lng);                    if ($.inArray(dataPhoto.id, $favourite) > -1) {                        var marker = new google.maps.Marker({                            position: latLng,                            icon: '/img/marker-favourite.png',                            content: {                                'video': dataPhoto.video_code,                                'id': dataPhoto.id                            },                            optimized: false                        })                    } else if (data.Editor.id != null) {                        var marker = new google.maps.Marker({                            position: latLng,                            icon: '/img/marker-editors.png',                            content: {                                'video': dataPhoto.video_code,                                'id': dataPhoto.id                            },                            optimized: false                        })                    } else if ($.inArray(dataPhoto.id, $popularPins) > -1) {                        var marker = new google.maps.Marker({                            position: latLng,                            icon: '/img/marker-popular.png',                            content: {                                'video': dataPhoto.video_code,                                'id': dataPhoto.id                            },                            optimized: false                        })                    } else if ($.inArray(dataPhoto.id, $latestPins) > -1) {                        var marker = new google.maps.Marker({                            position: latLng,                            icon: '/img/marker.png',                            content: {                                'video': dataPhoto.video_code,                                'id': dataPhoto.id                            },                            optimized: false                        })                    } else {                        var marker = new google.maps.Marker({                            position: latLng,                            icon: '/img/marker-featured.png',                            content: {                                'video': dataPhoto.video_code,                                'id': dataPhoto.id                            },                            optimized: false                        })                    }                    google.maps.event.addListener(marker, 'click', function(marker, i) {                        openVideo(this.content)                    });                    markers.push(marker)                });                markerCluster = new MarkerClusterer(map, markers, {                    styles: styles                });                $('.search').bind('submit', function() {                    searchAddress();                    return false                });                $('.sidebar .drone-list ul li:eq(0) a').bind('click', function() {                    return false                });                $('.sidebar .tab-set li a').bind('click', function() {                    $('.sidebar .tab-set li.active').removeClass('active');                    $(this).parent().addClass('active');                    $class = $(this).attr('class');                    $('.drone-list').hide();                    $('.drone-list.' + $class).show();                    return false                });                $('.sidebar .drone-list ul li a:not(.deleteFavourite)').bind('click', function() {                    $lat = $(this).attr('data-lat');                    $lng = $(this).attr('data-lng');                    $video = $(this).attr('data-video');                    $id = $(this).attr('data-id');                    var myLatLng = new google.maps.LatLng($lat, $lng);                    map.setCenter(myLatLng);                    map.setZoom(14);                    $temp = {};                    $temp['id'] = $id;                    $temp['video'] = $video;                    openVideo($temp);                    $body.removeClass('menu-active');                    return false                });                if (typeof($toPlay) != "undefined") {                    openVideo($toPlay);                    map.setZoom(14)                } else {                    getUserLocation(function(lat, lng) {                        map.setCenter(new google.maps.LatLng(lat, lng))                    })                }            }        })    }    function searchAddress() {        address = $('form.search input').val();        if (address == '') {} else {            var geocoder = new google.maps.Geocoder();            var result = "";            geocoder.geocode({                'address': address            }, function(results, status) {                if (status == google.maps.GeocoderStatus.OK) {                    $lat = results[0].geometry.location.lat();                    $lng = results[0].geometry.location.lng();                    result['lat'] = $lat;                    result['lng'] = $lng;                    var myLatLng = new google.maps.LatLng($lat, $lng);                    map.setCenter(myLatLng);                    if ($viewActive != 'drones') {                        var lat = $lat;                        var lng = $lng;                        var R = 6371;                        var closest = -1;                        var arrpoint = 0;                        for (i = 0; i < pilotMarkers.length; i++) {                            var mlat = pilotMarkers[i].position.lat();                            var mlng = pilotMarkers[i].position.lng();                            var dLat = rad(mlat - lat);                            var dLong = rad(mlng - lng);                            var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(rad(lat)) * Math.cos(rad(lat)) * Math.sin(dLong / 2) * Math.sin(dLong / 2);                            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));                            var d = R * c;                            if (d < 50) {                                arrpoint++;                                var marker = new google.maps.Marker({                                    map: map,                                    title: 'Some location',                                    position: new google.maps.LatLng(mlat, mlng)                                });                                var $radii = $pilotRadii[mlat + '#' + mlng] * 1000;                                var circle = new google.maps.Circle({                                    map: map,                                    radius: $radii,                                    fillColor: '#AA0000',                                    strokeWeight: 0                                });                                circle.bindTo('center', marker, 'position');                                circles.push(circle);                                marker.setMap(null)                            }                            if (arrpoint == 5) {                                i = pilotMarkers.length                            }                        }                    }                } else {                    $.triggerOverlayMessage('noMatch')                }            })        }        $('form.search input').trigger('blur')    }    function initFancySelects() {        var selectReplacements = $('.as-select');        if (selectReplacements.length) {            selectReplacements.each(function() {                var _this = $(this),                    title = _this.data('title') || 'Select an option...',                    callback = _this.data('callback') || false,                    redirect = !callback ? 'redirect-select' : '',                    classes = _this.data('class') || '',                    show = _this.data('show') || 'show-mobile',                    links = _this.find('a'),                    html = '<select class="fancy-select-select ' + redirect + ' hidden ' + show + '" data-class="hidden ' + show + ' ' + classes + '" data-title="' + title + '">',                    el;                if (title != 'blank') {                    html += "<option value>" + title + "</option>"                }                links.each(function() {                    var link = $(this);                    html += '<option ' + (link.hasClass('active') || link.hasClass('current') ? 'selected' : '') + ' value="' + link.attr('href') + '">' + link.text().replace(/[^\w\s\-\)\(]/gi, '') + '</option>'                });                html += '</select>';                el = $(html);                _this.after(el);                if (callback) {                    el.on('change', function(e) {                        window[callback]($(this), e)                    })                }            })        }        $('.fancy-select-select').fancySelect();        var redirectSelect = $('.redirect-select');        if (redirectSelect.length) {            redirectSelect.on('change', function() {                var _this = $(this),                    val = _this.val();                if (val && val != _this.data('title')) {                    window.location = val                }            })        }    }    function getUserLocation(callback) {        var _success = function(location) {                lat = location.coords.latitude;                lng = location.coords.longitude;                callback(lat, lng)            },            _erorr = function() {                console.log('error getting location')            };        if (navigator.geolocation) {            navigator.geolocation.getCurrentPosition(_success, _erorr, {                timeout: 30000,                enableHighAccuracy: true,                maximumAge: 75000            })        }    }    function bindUpload() {        new tQEraUploader({            html5Error: html5ErrorFunc,            progress: uploaderProgress,            success: uploaderSuccess,            error: uploaderError,            drop: true,            imageHolder: document.getElementById("imageHolder2"),            dragHoverClass: "drop_hover",            dropPlace: document.getElementById("dropPlace2"),            form: document.getElementById("registerPilotFormTest"),            file_input: document.getElementById("fileInput2"),            file_closebutton_class: "btn btn-danger close",            file_class: "list-i",            file_filter: "jpeg|jpg|png|bmp",            image: {                thumb: true,                thumb_width: 200,                thumb_height: 200,                resize_width: 600,                resize_height: 600,                keep_aspect_ratio: true            },            ajax: {                url: '/users/image_upload',                clearAfterUpload: true            },            watermark: {                watermark: false            },            auto_upload: true        });        var mapOptions = {            center: map.getCenter(),            mapTypeControl: false,            streetViewControl: false,            overviewMapControl: false,            zoom: 9        };        dragmap = new google.maps.Map(document.getElementById("dragMap"), mapOptions);        google.maps.event.addListener(dragmap, "click", function(event) {            placeMarker(event.latLng);            document.getElementById("DroneLat").value = event.latLng.lat();            document.getElementById("DroneLng").value = event.latLng.lng()        });        if ($('#DroneLat').val() != '' && $('#DroneLng').val() != '') {            var myLatLng = new google.maps.LatLng($('#DroneLat').val(), $('#DroneLng').val());            placeMarker(myLatLng);            dragmap.setCenter(myLatLng)        }        $('#searchForm2').unbind('submit').bind('submit', function() {            $address = $('input[name="location"]').val();            getLatLong($address);            return false        });        $('#registerPilotFormTest').bind('submit', function() {            var html = $.ajax({                type: "POST",                url: '/users/register_pilot',                data: $('#registerPilotFormTest').serialize(),                async: false            }).responseText;            $status = eval('json = ' + html);            if ($status.status == 'edited') {                $.magnificPopup.instance.close()            } else if ($status.status == "done") {                $('#paypalForm input[name="return"]').val('http://www.travelbydrone.com/users/payment_accepted/' + $status.id);                $('#paypalForm input[name="cancel_return"]').val('http://www.travelbydrone.com/users/payment_canceled/' + $status.id);                $('#paypalForm').submit()            }        })    }    function openVideo($url) {        if (typeof(ratings[$url.id]) == 'undefined') {            rating = 0        } else {            rating = ratings[$url.id]        }        window.history.pushState("", "Travelbydrone.com - Play Video", "/play/" + $url.id);        $.magnificPopup.open({            removalDelay: 0,            mainClass: 'my-mfp-zoom-in',            items: $url,            callbacks: {                change: function() {                    var $content = $(this.content);                    $content.find('.report').one('click', function(e) {                        $url = $(this).attr('href');                        $.magnificPopup.instance.close();                        $.magnificPopup.open({                            removalDelay: 300,                            mainClass: 'my-mfp-zoom-in',                            items: {                                src: $url                            },                            type: 'ajax',                            callbacks: {                                ajaxContentAdded: function($item) {                                    $('.reportForm input[type="radio"]').bind('change', function() {                                        if ($(this).val() == '1') {                                            $('.reportForm .mapEnclose').show();                                            var mapOptions = {                                                center: new google.maps.LatLng($('.reportForm #DroneLat').val(), $('.reportForm #DroneLng').val()),                                                mapTypeControl: false,                                                streetViewControl: false,                                                overviewMapControl: false,                                                zoom: 9                                            };                                            dragmap = new google.maps.Map(document.getElementById("dragMap"), mapOptions);                                            placeMarker(new google.maps.LatLng($('.reportForm #DroneLat').val(), $('.reportForm #DroneLng').val()));                                            google.maps.event.addListener(dragmap, "click", function(event) {                                                placeMarker(event.latLng);                                                document.getElementById("DroneLat").value = event.latLng.lat();                                                document.getElementById("DroneLng").value = event.latLng.lng()                                            });                                            $('#searchForm2').unbind('submit').bind('submit', function() {                                                $address = $('input[name="location"]').val();                                                getLatLong($address);                                                return false                                            })                                        } else {                                            $('.reportForm .mapEnclose').hide()                                        }                                    })                                }                            }                        });                        return false                    })                }            },            type: 'inline',            inline: {                markup: '<div class="mfp-iframe-scaler">' + '<div class="mfp-close"></div>' + '<iframe src="' + $url.video + '" class="mfp-iframe" frameborder="0" allowfullscreen></iframe>' + '<div class="mfp-bottom-bar footer">' + '<ul class="no-style menu social-share float-left social-links-block cf hide-mobile" data-share-url="http://www.travelbydrone.com/play/' + $url.id + '">' + '<li><a target="_blank" class="share-facebook facebook" href="https://www.facebook.com/sharer/sharer.php?u=http://www.travelbydrone.com/play/' + $url.id + '">Share via Facebook</a></li>' + '<li><a target="_blank" class="share-twitter twitter" href="https://twitter.com/share?url=http://www.travelbydrone.com/play/' + $url.id + '">Share via Twitter</a></li>' + '<li><a target="_blank" class="share-google google" href="https://plus.google.com/share?url=http://www.travelbydrone.com/play/' + $url.id + '">Share via Google+</a></li>' + '<li><a class="report action text-center trans" href="/reports/add/' + $url.id + '">Report!</a></li>' + '<li class="mia disabled"><a class="addToFavourite" href="/drones/add_to_favourite/' + $url.id + '">Add To Favourites</a></li>' + '<li class="mia disabled"><div class="rating" data-average="' + rating + '" data-id="' + $url.id + '"></div></li>' + '</ul>' + '</div>' + '</div><script>' + '$.initShareBlocks();' + 'if($(".login").length>1){' + '$(".rating").jRating({ step:true, rateMax: 5, ' + 'bigStarsPath : "/img/stars.png", ' + 'smallStarsPath : "/img/small.png", ' + 'phpPath : "/drones/rate" ,' + 'isDisabled : true ,' + '});' + '$(".mia a").bind("click", function() { return false; })' + '}else{' + '$.action.findFavourite(' + $url.id + ');' + '$(".rating").jRating({ step:true, rateMax: 5, ' + 'bigStarsPath : "/img/stars.png", ' + 'smallStarsPath : "/img/small.png", ' + 'phpPath : "/drones/rate" ,' + '});}</script>'            }        })    }    var $innerWrapper = $('.inner-wrapper'),        $mapWrapper = $('.map-wrapper'),        $theAdWrapper = $('.footer .figure'),        $ad = {},        _initialAdWidth = 0,        UIDrawn = false;    function redrawUI() {        var adHeight = $theAdWrapper.outerHeight();        $ad = $theAdWrapper.find('.adsbygoogle');        if (!UIDrawn) {            _initialAdWidth = $ad.width();            UIDrawn = true        } else {            $theAdWrapper.removeClass('hidden');            if ($theAdWrapper.width() < _initialAdWidth) {                $theAdWrapper.addClass('hidden');                $mapWrapper.css('paddingBottom', 0);                return            }        }        $mapWrapper.css('paddingBottom', adHeight)    }    function bindFavourite() {}    function fetchPilots() {        var html = $.ajax({            type: "POST",            url: '/pilots/fetch',            async: false,            dataType: 'json',            success: function(data) {                $.each(data, function($key, $data) {                    var latLng = new google.maps.LatLng($data.Pilot.lat, $data.Pilot.lng);                    $pilotRadii[$data.Pilot.lat + '#' + $data.Pilot.lng] = $data.Pilot.distance;                    var marker = new google.maps.Marker({                        position: latLng,                        icon: '/img/pilot-marker.png',                        content: {                            "Pilot": $data.Pilot.id,                            "lat": $data.Pilot.lat,                            "lng": $data.Pilot.lnd,                            "distance": $data.Pilot.distance                        },                        optimized: false                    });                    google.maps.event.addListener(marker, 'mouseover', function(marker, i) {                        var circle = new google.maps.Circle({                            map: map,                            radius: 2444,                            fillColor: '#AA0000'                        });                        circle.bindTo('center', marker, 'position');                        circles.push(circle)                    });                    google.maps.event.addListener(marker, 'click', function(marker, i) {                        openPilot(this.content)                    });                    pilotMarkers.push(marker)                });                pilotMarkerCluster = new MarkerClusterer(map, pilotMarkers, {                    styles: styles                })            }        }).responseText    }    function changeView() {        if ($viewActive == 'drones') {            $('.pilotLink li:eq(2)').addClass('active');            $('.pilotLink li:eq(1)').removeClass('active');            $viewActive = 'pilots';            clearMarkers();            if (pilotMarkers.length == 0) {                fetchPilots()            } else {                redrawPilotPins()            }            $('.pilotSidebar').show();            $('.droneAddLink').addClass('hidden');            $('.pilotAddLink').removeClass('hidden');            $('.sidebar').hide()        } else {            $('.pilotLink li:eq(1)').addClass('active');            $('.pilotLink li:eq(2)').removeClass('active');            $viewActive = 'drones';            clearPilotMarkers();            $('.pilotSidebar').hide();            $('.sidebar').show();            $('.droneAddLink').removeClass('hidden');            $('.pilotAddLink').addClass('hidden');            redrawPins()        }        return false    }    function openPilot(data) {        var $par = data;        $.magnificPopup.open({            removalDelay: 300,            mainClass: 'my-mfp-zoom-in',            items: {                src: '/pilots/view/' + data.Pilot            },            type: 'ajax',            callbacks: {                ajaxContentAdded: function($item) {                    if ($('#pilotMap').length > 0) {                        data = $par;                        $('#pilotMap');                        $lat = data.lat;                        $lng = data.lng;                        var pilotMapOptions = {                            zoom: 6,                            center: new google.maps.LatLng($lat, $lng),                            styles: [{                                "featureType": "road",                                "elementType": "geometry",                                "stylers": [{                                    "lightness": 100                                }, {                                    "visibility": "simplified"                                }]                            }, {                                "featureType": "water",                                "elementType": "geometry",                                "stylers": [{                                    "visibility": "on"                                }, {                                    "color": "#C6E2FF"                                }]                            }, {                                "featureType": "poi",                                "elementType": "geometry.fill",                                "stylers": [{                                    "color": "#C5E3BF"                                }]                            }, {                                "featureType": "road",                                "elementType": "geometry.fill",                                "stylers": [{                                    "color": "#D1D1B8"                                }]                            }]                        };                        pilotmap = new google.maps.Map(document.getElementById('pilotMap'), pilotMapOptions);                        var marker = new google.maps.Marker({                            map: pilotmap,                            icon: '/img/marker-featured.png',                            position: new google.maps.LatLng($lat, $lng)                        });                        var $radii = data.distance * 1000;                        var circle = new google.maps.Circle({                            map: map,                            radius: $radii,                            fillColor: '#AA0000'                        });                        circle.bindTo('center', marker, 'position')                    }                },                ajaxContentAdded: function() {}            }        })    }    function bindAddPopup() {        $('#DroneAddForm').bind('submit', function() {            $errorMessage = '';            if ($('#DroneLng').val() == '') {                $errorMessage = $errorMessage + 'Please select a loction<br />'            }            if ($('#DroneVideo').val() == '') {                $errorMessage = $errorMessage + 'Please enter the video url<br />'            }            if ($('#DroneEmailAddress').val() == '') {                $errorMessage = $errorMessage + 'Please enter your email address<br />'            }            if ($errorMessage == '') {                $('.errorMessage').hide()            } else {                $('.errorMessage').html($errorMessage).show();                return false            }            var html = $.ajax({                type: "POST",                url: '/drones/ajax_save',                data: $('#DroneAddForm').serialize(),                async: false            }).responseText;            $details = eval('json = ' + html);            if ($details.status == 'error') {                $('.errorMessage').html($details.message).show()            } else {                $('.addForm').hide();                $('.successMessage').html($details.message).show()            }            return false        });        var mapOptions = {            center: map.getCenter(),            mapTypeControl: false,            streetViewControl: false,            overviewMapControl: false,            zoom: 9        };        dragmap = new google.maps.Map(document.getElementById("dragMap"), mapOptions);        google.maps.event.addListener(dragmap, "click", function(event) {            placeMarker(event.latLng);            document.getElementById("DroneLat").value = event.latLng.lat();            document.getElementById("DroneLng").value = event.latLng.lng()        });        $('#searchForm2').unbind('submit').bind('submit', function() {            $address = $('input[name="location"]').val();            getLatLong($address);            return false        })    }    function clearMarkers() {        if (markers) {            for (i in markers) {                markers[i].setMap(null)            }        }        markerCluster.clearMarkers()    }    function clearPilotMarkers() {        if (pilotMarkers) {            for (i in pilotMarkers) {                markers[i].setMap(null)            }        }        clearCircles();        pilotMarkerCluster.clearMarkers()    }    function redrawPilotPins() {        pilotMarkerCluster = new MarkerClusterer(map, pilotMarkers, {            styles: styles        })    }    function redrawPins() {        markerCluster = new MarkerClusterer(map, markers, {            styles: styles        })    }    if (!Modernizr.input.placeholder) {        placeholderSupport = false;        $('[placeholder]').focus(function() {            var input = $(this);            if (input.val() == input.attr('placeholder')) {                input.val('');                input.removeClass('placeholder')            }        }).blur(function() {            var input = $(this);            if (input.val() == '' || input.val() == input.attr('placeholder')) {                input.addClass('placeholder');                input.val(input.attr('placeholder'))            }        }).blur()    }    function magnificClick(el) {        var $this = el,            $options = $.extend({}, _magnificDefaults, {                items: {                    src: $this.attr('href')                },                type: 'ajax'            });        bodyClass = $this.data('body-class') || false;        $body.removeClassPrefix('mfpbc-');        if (bodyClass) {            $body.addClass('mfpbc-' + bodyClass)        }        el.magnificPopup($options).trigger('click')    }    $(function() {        FormValidation.init();        _magnificDefaults = {            removalDelay: 300,            mainClass: 'my-mfp-zoom-in',            type: 'ajax',            closeOnContentClick: false,            fixedContentPos: true,            callbacks: {                afterChange: function() {                    setTimeout(function() {                        if ($('.fancy-select-select').length > 0) {                            $('.fancy-select-select').fancySelect()                        }                    }, 500)                },                ajaxContentAdded: function() {                    if ($('#registerPilotFormTest').length > 0) {                        bindUpload()                    } else {                        bindAddPopup()                    }                },                afterClose: function() {                    $body.removeClassPrefix('mfpbc-');                    $('.fancy-select-select').fancySelect()                }            }        };        $('.pilotLink a').on('click', function() {            changeView();            return false        });        $body.on('click', '.addLink, a.fancypage', function(e) {            e.preventDefault();            magnificClick($(this))        });        $('#menu-trigger').on('click', function(e) {            e.preventDefault();            $body.toggleClass('menu-active')        });        $(document).on("submit", "#ReportAddForm", function() {            var html = $.ajax({                type: "POST",                url: '/reports/add',                data: {                    'data[Report][lat]': $('.reportForm #DroneLat').val(),                    'data[Report][lng]': $('.reportForm #DroneLng').val(),                    'data[Report][user_id]': $('.reportForm #ReportUserId').val(),                    'data[Report][drone_id]': $('.reportForm #ReportDroneId').val(),                    'data[Report][description]': $('.reportForm #ReportDescription').val(),                    'data[Report][reason_id]': $('.reportForm input[type="radio"]:checked').val()                },                async: false            }).responseText;            $.magnificPopup.instance.close();            return false        });        $(document).on("submit", '#registerForm', function() {            $.ajax({                type: "POST",                url: '/users/register',                data: {                    'data[User][email_address]': $("#UserEmailAddress").val(),                    'data[User][password]': $("#UserPassword").val(),                    'data[User][confirm_password]': $("#UserConfirmPassword").val(),                    'data[User][username]': $("#UserUsername").val()                },                success: function(data) {                    if (data == 'username') {                        $('#registerForm .error').html('This username already exists').show()                    } else if (data == 'email_exists') {                        $('#registerForm .error').html('This email address already exists').show()                    } else if (data == 'no match') {                        $('#registerForm .error').html('Please confirm the password').show()                    } else {                        $('#registerForm').html('<p>We have just emailed you to confirm your email address. <br /> Please click on the link in the email to continue.  </p>')                    }                }            });            return false        });        $(document).on("submit", '#forgotForm', function(e) {            e.preventDefault();            html = $.ajax({                type: "POST",                url: '/users/forgot_password',                data: {                    'data[email_address]': $("#UserEmailAddress").val()                },                success: function(data) {                    if (data.trim() == 'done') {                        $.magnificPopup.instance.close()                    } else if (data.trim() == 'nouser') {                        $('#forgotForm .error').show().html('No user found')                    } else {                        $('#forgotForm .error').show().html(data)                    }                }            }).responseText;            return false        });        $(document).on("submit", "#passwordForm", function(e) {            e.preventDefault();            $.ajax({                type: "POST",                url: '/users/save_password',                data: {                    'data[User][password]': $("#UserPassword").val(),                    'data[User][password_confirm]': $("#UserConfirmPassword").val()                },                success: function(data) {                    if (data.trim() == 'done') {                        $.magnificPopup.instance.close()                    } else {                        $('#passwordForm .error').show().html(data)                    }                }            });            return false        });        $(document).on("click", ".deleteFavourite", function() {            $id = $(this).attr('data-attr');            $link = $(this);            $.ajax({                type: "POST",                url: '/drones/remove_from_favourite/' + $id,                dataType: 'json',                success: function(data) {                    if (data.status == true) {                        $link.closest('li').remove()                    }                }            });            return false        });        $(document).on("submit", '#loginForm', function() {            $.ajax({                type: "POST",                url: '/users/login',                data: {                    'data[User][email_address]': $("#UserEmailAddress").val(),                    'data[User][password]': $("#UserPassword").val()                },                success: function(data) {                    if (data.trim() == 'done') {                        window.location.href = "/"                    } else {                        $('#loginForm .error').show().html(data)                    }                }            });            return false        })    });    $window.on("load", function() {        $.initShareBlocks();        initMap();        setTimeout(function() {            redrawUI()        }, 1)    });    $window.on("resize", $.debounce(200, function() {        redrawUI()    }));    $window.on("scroll", function() {        clearTimeout(timer);        if (!$body.hasClass('disable-hover')) {            $body.addClass('disable-hover')        }        timer = setTimeout(function() {            $body.removeClass('disable-hover')        }, 200)    })})(this.jQuery);